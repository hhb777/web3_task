{
	"id": "2a3589c596b31fa77891da5d115c864d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"solidity/soliditybase/typetest.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8;\r\n\r\ncontract addressTest{\r\n\r\n    function test() public payable {\r\n        address addr = 0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2;\r\n        payable(addr).transfer(9999999999999999999);\r\n    }\r\n\r\n    mapping(string => uint) private t;\r\n    function test2() public view returns(bytes1){\r\n        bytes1 s;\r\n        return s;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"solidity/soliditybase/typetest.sol": {
				"addressTest": {
					"abi": [
						{
							"inputs": [],
							"name": "test",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "test2",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "",
									"type": "bytes1"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"solidity/soliditybase/typetest.sol\":58:389  contract addressTest{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"solidity/soliditybase/typetest.sol\":58:389  contract addressTest{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x66e41cb7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xf8a8fd6d\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"solidity/soliditybase/typetest.sol\":296:386  function test2() public view returns(bytes1){... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_4\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_4:\n      pop\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity/soliditybase/typetest.sol\":87:248  function test() public payable {... */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"solidity/soliditybase/typetest.sol\":296:386  function test2() public view returns(bytes1){... */\n    tag_6:\n        /* \"solidity/soliditybase/typetest.sol\":333:339  bytes1 */\n      0x00\n        /* \"solidity/soliditybase/typetest.sol\":351:359  bytes1 s */\n      dup1\n        /* \"solidity/soliditybase/typetest.sol\":377:378  s */\n      dup1\n        /* \"solidity/soliditybase/typetest.sol\":370:378  return s */\n      swap2\n      pop\n      pop\n        /* \"solidity/soliditybase/typetest.sol\":296:386  function test2() public view returns(bytes1){... */\n      swap1\n      jump\t// out\n        /* \"solidity/soliditybase/typetest.sol\":87:248  function test() public payable {... */\n    tag_10:\n        /* \"solidity/soliditybase/typetest.sol\":129:141  address addr */\n      0x00\n        /* \"solidity/soliditybase/typetest.sol\":144:186  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n      0xab8483f64d9c6d1ecf9b849ae677dd3315835cb2\n        /* \"solidity/soliditybase/typetest.sol\":129:186  address addr = 0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n      swap1\n      pop\n        /* \"solidity/soliditybase/typetest.sol\":205:209  addr */\n      dup1\n        /* \"solidity/soliditybase/typetest.sol\":197:219  payable(addr).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"solidity/soliditybase/typetest.sol\":197:240  payable(addr).transfer(9999999999999999999) */\n      0x08fc\n        /* \"solidity/soliditybase/typetest.sol\":220:239  9999999999999999999 */\n      0x8ac7230489e7ffff\n        /* \"solidity/soliditybase/typetest.sol\":197:240  payable(addr).transfer(9999999999999999999) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_14\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_14:\n      pop\n        /* \"solidity/soliditybase/typetest.sol\":118:248  {... */\n      pop\n        /* \"solidity/soliditybase/typetest.sol\":87:248  function test() public payable {... */\n      jump\t// out\n        /* \"#utility.yul\":7:156   */\n    tag_15:\n        /* \"#utility.yul\":43:50   */\n      0x00\n        /* \"#utility.yul\":83:149   */\n      0xff00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":76:81   */\n      dup3\n        /* \"#utility.yul\":72:150   */\n      and\n        /* \"#utility.yul\":61:150   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":162:277   */\n    tag_16:\n        /* \"#utility.yul\":247:270   */\n      tag_20\n        /* \"#utility.yul\":264:269   */\n      dup2\n        /* \"#utility.yul\":247:270   */\n      tag_15\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":242:245   */\n      dup3\n        /* \"#utility.yul\":235:271   */\n      mstore\n        /* \"#utility.yul\":162:277   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":283:501   */\n    tag_8:\n        /* \"#utility.yul\":374:378   */\n      0x00\n        /* \"#utility.yul\":412:414   */\n      0x20\n        /* \"#utility.yul\":401:410   */\n      dup3\n        /* \"#utility.yul\":397:415   */\n      add\n        /* \"#utility.yul\":389:415   */\n      swap1\n      pop\n        /* \"#utility.yul\":425:494   */\n      tag_22\n        /* \"#utility.yul\":491:492   */\n      0x00\n        /* \"#utility.yul\":480:489   */\n      dup4\n        /* \"#utility.yul\":476:493   */\n      add\n        /* \"#utility.yul\":467:473   */\n      dup5\n        /* \"#utility.yul\":425:494   */\n      tag_16\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":283:501   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e667c0cd6a1513d8639c6c41ded3aeff5dbf4005ae7c4a1303e9594d45af312464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506101598061001c5f395ff3fe608060405260043610610028575f3560e01c806366e41cb71461002c578063f8a8fd6d14610056575b5f80fd5b348015610037575f80fd5b50610040610060565b60405161004d919061010a565b60405180910390f35b61005e610069565b005b5f808091505090565b5f73ab8483f64d9c6d1ecf9b849ae677dd3315835cb290508073ffffffffffffffffffffffffffffffffffffffff166108fc678ac7230489e7ffff90811502906040515f60405180830381858888f193505050501580156100cc573d5f803e3d5ffd5b5050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b610104816100d0565b82525050565b5f60208201905061011d5f8301846100fb565b9291505056fea2646970667358221220e667c0cd6a1513d8639c6c41ded3aeff5dbf4005ae7c4a1303e9594d45af312464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x28 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x66E41CB7 EQ PUSH2 0x2C JUMPI DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x40 PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x10A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x69 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0x8AC7230489E7FFFF SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x104 DUP2 PUSH2 0xD0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11D PUSH0 DUP4 ADD DUP5 PUSH2 0xFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 PUSH8 0xC0CD6A1513D8639C PUSH13 0x41DED3AEFF5DBF4005AE7C4A13 SUB 0xE9 MSIZE 0x4D GASLIMIT 0xAF BALANCE 0x24 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "58:331:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@test2_32": {
									"entryPoint": 96,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@test_17": {
									"entryPoint": 105,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_bytes1_to_t_bytes1_fromStack": {
									"entryPoint": 251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes1__to_t_bytes1__fromStack_reversed": {
									"entryPoint": 266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bytes1": {
									"entryPoint": 208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:504:1",
										"nodeType": "YulBlock",
										"src": "0:504:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:105:1",
													"nodeType": "YulBlock",
													"src": "51:105:1",
													"statements": [
														{
															"nativeSrc": "61:89:1",
															"nodeType": "YulAssignment",
															"src": "61:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "76:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "83:66:1",
																		"nodeType": "YulLiteral",
																		"src": "83:66:1",
																		"type": "",
																		"value": "0xff00000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "72:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:1"
																},
																"nativeSrc": "72:78:1",
																"nodeType": "YulFunctionCall",
																"src": "72:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes1",
												"nativeSrc": "7:149:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:1",
														"nodeType": "YulTypedName",
														"src": "33:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:1",
														"nodeType": "YulTypedName",
														"src": "43:7:1",
														"type": ""
													}
												],
												"src": "7:149:1"
											},
											{
												"body": {
													"nativeSrc": "225:52:1",
													"nodeType": "YulBlock",
													"src": "225:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "242:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "242:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "264:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "264:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes1",
																			"nativeSrc": "247:16:1",
																			"nodeType": "YulIdentifier",
																			"src": "247:16:1"
																		},
																		"nativeSrc": "247:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "247:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "235:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "235:6:1"
																},
																"nativeSrc": "235:36:1",
																"nodeType": "YulFunctionCall",
																"src": "235:36:1"
															},
															"nativeSrc": "235:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "235:36:1"
														}
													]
												},
												"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
												"nativeSrc": "162:115:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "213:5:1",
														"nodeType": "YulTypedName",
														"src": "213:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "220:3:1",
														"nodeType": "YulTypedName",
														"src": "220:3:1",
														"type": ""
													}
												],
												"src": "162:115:1"
											},
											{
												"body": {
													"nativeSrc": "379:122:1",
													"nodeType": "YulBlock",
													"src": "379:122:1",
													"statements": [
														{
															"nativeSrc": "389:26:1",
															"nodeType": "YulAssignment",
															"src": "389:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "401:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "401:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "412:2:1",
																		"nodeType": "YulLiteral",
																		"src": "412:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "397:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "397:3:1"
																},
																"nativeSrc": "397:18:1",
																"nodeType": "YulFunctionCall",
																"src": "397:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "389:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "467:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "467:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "480:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "480:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "491:1:1",
																				"nodeType": "YulLiteral",
																				"src": "491:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "476:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "476:3:1"
																		},
																		"nativeSrc": "476:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "476:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
																	"nativeSrc": "425:41:1",
																	"nodeType": "YulIdentifier",
																	"src": "425:41:1"
																},
																"nativeSrc": "425:69:1",
																"nodeType": "YulFunctionCall",
																"src": "425:69:1"
															},
															"nativeSrc": "425:69:1",
															"nodeType": "YulExpressionStatement",
															"src": "425:69:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes1__to_t_bytes1__fromStack_reversed",
												"nativeSrc": "283:218:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "351:9:1",
														"nodeType": "YulTypedName",
														"src": "351:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "363:6:1",
														"nodeType": "YulTypedName",
														"src": "363:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "374:4:1",
														"nodeType": "YulTypedName",
														"src": "374:4:1",
														"type": ""
													}
												],
												"src": "283:218:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_tuple_t_bytes1__to_t_bytes1__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610028575f3560e01c806366e41cb71461002c578063f8a8fd6d14610056575b5f80fd5b348015610037575f80fd5b50610040610060565b60405161004d919061010a565b60405180910390f35b61005e610069565b005b5f808091505090565b5f73ab8483f64d9c6d1ecf9b849ae677dd3315835cb290508073ffffffffffffffffffffffffffffffffffffffff166108fc678ac7230489e7ffff90811502906040515f60405180830381858888f193505050501580156100cc573d5f803e3d5ffd5b5050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b610104816100d0565b82525050565b5f60208201905061011d5f8301846100fb565b9291505056fea2646970667358221220e667c0cd6a1513d8639c6c41ded3aeff5dbf4005ae7c4a1303e9594d45af312464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x28 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x66E41CB7 EQ PUSH2 0x2C JUMPI DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x40 PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x10A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x69 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0x8AC7230489E7FFFF SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x104 DUP2 PUSH2 0xD0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11D PUSH0 DUP4 ADD DUP5 PUSH2 0xFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 PUSH8 0xC0CD6A1513D8639C PUSH13 0x41DED3AEFF5DBF4005AE7C4A13 SUB 0xE9 MSIZE 0x4D GASLIMIT 0xAF BALANCE 0x24 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "58:331:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;296:90;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;87:161;;;:::i;:::-;;296:90;333:6;351:8;377:1;370:8;;;296:90;:::o;87:161::-;129:12;144:42;129:57;;205:4;197:22;;:43;220:19;197:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;118:130;87:161::o;7:149:1:-;43:7;83:66;76:5;72:78;61:89;;7:149;;;:::o;162:115::-;247:23;264:5;247:23;:::i;:::-;242:3;235:36;162:115;;:::o;283:218::-;374:4;412:2;401:9;397:18;389:26;;425:69;491:1;480:9;476:17;467:6;425:69;:::i;:::-;283:218;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "69000",
								"executionCost": "115",
								"totalCost": "69115"
							},
							"external": {
								"test()": "infinite",
								"test2()": "321"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 389,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 389,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 389,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 389,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 389,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 389,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 58,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 389,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58,
									"end": 389,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 389,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 389,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58,
									"end": 389,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 389,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58,
									"end": 389,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 389,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 389,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 389,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 389,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 389,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 389,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 389,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e667c0cd6a1513d8639c6c41ded3aeff5dbf4005ae7c4a1303e9594d45af312464736f6c634300081a0033",
									".code": [
										{
											"begin": 58,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 389,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 389,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 389,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 389,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "66E41CB7"
										},
										{
											"begin": 58,
											"end": 389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "F8A8FD6D"
										},
										{
											"begin": 58,
											"end": 389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 389,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 389,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 296,
											"end": 386,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 296,
											"end": 386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 296,
											"end": 386,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 296,
											"end": 386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 296,
											"end": 386,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 296,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 296,
											"end": 386,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 296,
											"end": 386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 296,
											"end": 386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 296,
											"end": 386,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 296,
											"end": 386,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 296,
											"end": 386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 296,
											"end": 386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 296,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 296,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 296,
											"end": 386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 296,
											"end": 386,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 296,
											"end": 386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 296,
											"end": 386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 296,
											"end": 386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 296,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 296,
											"end": 386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 296,
											"end": 386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 296,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 296,
											"end": 386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 296,
											"end": 386,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 296,
											"end": 386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 296,
											"end": 386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 296,
											"end": 386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 296,
											"end": 386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 296,
											"end": 386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 296,
											"end": 386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 296,
											"end": 386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 296,
											"end": 386,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 87,
											"end": 248,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 87,
											"end": 248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 87,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 87,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 87,
											"end": 248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 87,
											"end": 248,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 87,
											"end": 248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 87,
											"end": 248,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 296,
											"end": 386,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 296,
											"end": 386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 333,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 370,
											"end": 378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 370,
											"end": 378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 296,
											"end": 386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 296,
											"end": 386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 87,
											"end": 248,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 87,
											"end": 248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 144,
											"end": 186,
											"name": "PUSH",
											"source": 0,
											"value": "AB8483F64D9C6D1ECF9B849AE677DD3315835CB2"
										},
										{
											"begin": 129,
											"end": 186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 205,
											"end": 209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 219,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 197,
											"end": 219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 220,
											"end": 239,
											"name": "PUSH",
											"source": 0,
											"value": "8AC7230489E7FFFF"
										},
										{
											"begin": 197,
											"end": 240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 197,
											"end": 240,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 197,
											"end": 240,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 197,
											"end": 240,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 240,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 197,
											"end": 240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 197,
											"end": 240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 118,
											"end": 248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 87,
											"end": 248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 156,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 7,
											"end": 156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 43,
											"end": 50,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 149,
											"name": "PUSH",
											"source": 1,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 76,
											"end": 81,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 72,
											"end": 150,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 61,
											"end": 150,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 61,
											"end": 150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 162,
											"end": 277,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 162,
											"end": 277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 247,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 264,
											"end": 269,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 247,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 247,
											"end": 270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 247,
											"end": 270,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 247,
											"end": 270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 242,
											"end": 245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 235,
											"end": 271,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 162,
											"end": 277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 162,
											"end": 277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 162,
											"end": 277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 283,
											"end": 501,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 283,
											"end": 501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 374,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 414,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 410,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 397,
											"end": 415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 389,
											"end": 415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 425,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 491,
											"end": 492,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 489,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 476,
											"end": 493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 473,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 425,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 425,
											"end": 494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 425,
											"end": 494,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 425,
											"end": 494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 283,
											"end": 501,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 501,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 283,
											"end": 501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 283,
											"end": 501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 283,
											"end": 501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"solidity/soliditybase/typetest.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"test()": "f8a8fd6d",
							"test2()": "66e41cb7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"test\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test2\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"\",\"type\":\"bytes1\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity/soliditybase/typetest.sol\":\"addressTest\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"solidity/soliditybase/typetest.sol\":{\"keccak256\":\"0x1ac597971e0b9e36e88d1cc75c5fed554301628e1443d3a4d255ff5b2f239c7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4fa9ac49ddea883de7f7ce50a7551d92ac4857a377715404949423c824b170c\",\"dweb:/ipfs/QmNuscj9HVxCLzYe2sEjvAqaaGBzmkGC6aVvfxNdKFR3BP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 21,
								"contract": "solidity/soliditybase/typetest.sol:addressTest",
								"label": "t",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_string_memory_ptr,t_uint256)"
							}
						],
						"types": {
							"t_mapping(t_string_memory_ptr,t_uint256)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> solidity/soliditybase/typetest.sol:12:5:\n   |\n12 |     function test2() public view returns(bytes1){\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 386,
					"file": "solidity/soliditybase/typetest.sol",
					"start": 296
				},
				"type": "Warning"
			}
		],
		"sources": {
			"solidity/soliditybase/typetest.sol": {
				"ast": {
					"absolutePath": "solidity/soliditybase/typetest.sol",
					"exportedSymbols": {
						"addressTest": [
							33
						]
					},
					"id": 34,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:21:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "addressTest",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 33,
							"linearizedBaseContracts": [
								33
							],
							"name": "addressTest",
							"nameLocation": "67:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "118:130:0",
										"statements": [
											{
												"assignments": [
													5
												],
												"declarations": [
													{
														"constant": false,
														"id": 5,
														"mutability": "mutable",
														"name": "addr",
														"nameLocation": "137:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 16,
														"src": "129:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 4,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "129:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 7,
												"initialValue": {
													"hexValue": "307841623834383346363464394336643145634639623834394165363737644433333135383335636232",
													"id": 6,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "144:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"value": "0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "129:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "39393939393939393939393939393939393939",
															"id": 13,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "220:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_9999999999999999999_by_1",
																"typeString": "int_const 9999999999999999999"
															},
															"value": "9999999999999999999"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_9999999999999999999_by_1",
																"typeString": "int_const 9999999999999999999"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 10,
																	"name": "addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "205:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 9,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "197:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 8,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "197:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "197:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "211:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "197:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "197:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "197:43:0"
											}
										]
									},
									"functionSelector": "f8a8fd6d",
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "test",
									"nameLocation": "96:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "100:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "118:0:0"
									},
									"scope": 33,
									"src": "87:161:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "t",
									"nameLocation": "288:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 33,
									"src": "256:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
										"typeString": "mapping(string => uint256)"
									},
									"typeName": {
										"id": 20,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 18,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "264:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "256:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
											"typeString": "mapping(string => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 19,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "274:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "340:46:0",
										"statements": [
											{
												"assignments": [
													27
												],
												"declarations": [
													{
														"constant": false,
														"id": 27,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "358:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 31,
														"src": "351:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														},
														"typeName": {
															"id": 26,
															"name": "bytes1",
															"nodeType": "ElementaryTypeName",
															"src": "351:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 28,
												"nodeType": "VariableDeclarationStatement",
												"src": "351:8:0"
											},
											{
												"expression": {
													"id": 29,
													"name": "s",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "377:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"functionReturnParameters": 25,
												"id": 30,
												"nodeType": "Return",
												"src": "370:8:0"
											}
										]
									},
									"functionSelector": "66e41cb7",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "test2",
									"nameLocation": "305:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "310:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "333:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 23,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "333:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "332:8:0"
									},
									"scope": 33,
									"src": "296:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 34,
							"src": "58:331:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:356:0"
				},
				"id": 0
			}
		}
	}
}